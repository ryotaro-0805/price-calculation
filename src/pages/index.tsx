import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useRef, useState } from 'react'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const articles = [{ name: 'first', price: 300 }, { name: 'second', price: 400 }, { name: 'third', price: 600 }]
  const ref = useRef();
  const button = useRef();

  const [selectName, setSelectName] = useState([]);
  const [selectPrice, setSelectPrice] = useState([]);
  const [selectContent, setSelectContent] = useState([]);
  const [missChech, setMissCheck] = useState();
  const [sumPrice, setSumPrice] = useState();

  const submit = () => {
    console.log('clicked!');
    setSelectName([]);
    setSelectContent([]);
    setSelectPrice([]);
    setMissCheck(0);

    for (let i = 0; i <= arguments.length; i++) {
      if (ref.current[i * 2].checked) {
        setSelectName((indata) => [...indata, articles[i].name]);
        if (!(ref.current[i * 2 + 1].value.length === 0)) {
          setSelectContent((inContent) => [...inContent, ref.current[i * 2 + 1].value]);
          setSelectPrice((inPrice) => [...inPrice, articles[i].price * ref.current[i * 2 + 1].value * 0.01]);
        } else {
          setSelectContent((inContent) => [...inContent, '選択されていません！']);
          setSelectPrice((inPrice) => [...inPrice, 0])
          setMissCheck((e) => e + 1);
        }
      }
    }
    setSumPrice();
  }

  const switchDisable = () => {
    for (let i = 0; i < ref.current.length; i += 2) {
      ref.current[i].checked && (ref.current[i + 1].disabled = false)
      !ref.current[i].checked && (ref.current[i + 1].disabled = true)
      !ref.current[i].checked && (ref.current[i + 1].value = '')
    }
    checkCHeckBox();
  }
  
  const [checker,setChecker]=useState(0);
  const checkCHeckBox=()=>{
    setChecker(0);
    ref.current[0].checked && setChecker((inData)=>inData+1); 
    ref.current[2].checked && setChecker((inData)=>inData+1); 
    ref.current[4].checked && setChecker((inData)=>inData+1); 
  }
  
  useEffect(()=>{
    checker>0 ? (button.current.disabled=false):(button.current.disabled=true);
  },[checker]);
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
      <div>
        <form action="" ref={ref}>
          {articles.map((article, index) => (
            <div key={index}>
              <input onChange={switchDisable} type="checkbox" name="" id="" />
              <span>{article.name}-</span>
              <span>{article.price}</span>
              <select name={article.name} id={index} disabled>
                <option value="">選択してください</option>
                <option value="100">100g</option>
                <option value="200">200g</option>
                <option value="300">300g</option>
              </select>
            </div>
          ))}
        </form>
      </div>
      <p>銘柄</p>
      {selectName.map((name, index) => (
        <div key={index}>
          <span>{name}-</span>
          <span>{selectContent[index]}g=</span>
          <span>{selectPrice[index]}円</span>
        </div>
      ))}
      <p>合計:{sumPrice}</p>
      <button ref={button} onClick={submit}>決定</button>
      {(missChech < 1) && (selectName.length>0) ? <p>最終画面へ</p> : <p>選択を確認してください。</p>}
      {/* {(selectName.length>0) ? <p>最終画面へ</p> : } */}
    </div>
    </>
  )
}
